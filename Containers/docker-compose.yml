services:
  postgres:
    image: postgres:16.2
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: NHSv2
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - keycloak_network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
        RABBITMQ_DEFAULT_USER: admin
        RABBITMQ_DEFAULT_PASS: admin
        RABBITMQ_LOAD_DEFINITIONS: /etc/rabbitmq/definitions.json
    volumes:
      - ./rabbit_7b8ecb1de850_2025-3-1.json:/opt/definitions.json:ro
      - ./rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
    networks:
      - keycloak_network

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "4317:4317"
      - "4318:4318"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
    environment:
      - COLLECTOR_OTLP_ENABLED=true

  keycloak:
    build:
      context: .
      dockerfile: Dockerfile
    command: start
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/NHSv2
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KK_TO_RMQ_URL: rabbitmq
      KK_TO_RMQ_VHOST: NHSv2-dev
      KK_TO_RMQ_USERNAME: keycloak
      KK_TO_RMQ_PASSWORD: keycloak
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - postgres
      - rabbitmq
      - jaeger
    networks:
      - keycloak_network

  eventstore.db:
    image: eventstore/eventstore:24.2.0-jammy
    user: root
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    ports:
      - "2113:2113"
    volumes:
      - type: volume
        source: eventstore-volume-data
        target: /var/lib/eventstore
      - type: volume
        source: eventstore-volume-logs
        target: /var/log/eventstore
        
  appointments.db.reads:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sql_server
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Password123!
    ports:
      - "1433:1433"
    user: "10001"
    restart: unless-stopped
    
  transactions.db.reads:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sql_server_transactions
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Password123!
    ports:
      - "1434:1433"
    user: "10001"
    restart: unless-stopped
      
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
      
volumes:
  postgres_data:
    driver: local
  eventstore-volume-data:
  eventstore-volume-logs:

networks:
  keycloak_network:
    driver: bridge